function handleAFNModal(e,t){const r=e.querySelector("form"),a=r.querySelector(".modal_button.accept"),o=r.querySelector(".modal_button.cancel"),n={},c={};function l(){let e=!0;return t.fields.forEach((t=>{const r=c[t.name].value.trim(),a=n[t.name];if(a&&(a.textContent="",a.classList.remove("error")),t.validate){const o=t.validate(r,c);o&&(e=!1,a&&(a.textContent=o,a.classList.add("error")))}})),e}t.fields.forEach((e=>{c[e.name]=r.querySelector(e.selector),e.alertSelector&&(n[e.name]=r.querySelector(e.alertSelector))})),a.disabled=!0,t.populateAFNSelects&&actualizarSelectsDeAFN(c),r.addEventListener(t.validationEvent||"input",(()=>{const e=l();a.disabled=!e})),r.addEventListener("submit",(a=>{a.preventDefault();l()?(t.onSubmit(c,r),mostrarNotificacion("OperaciÃ³n realizada exitosamente.","success"),closeModal(e)):mostrarNotificacion("Por favor, corrige los errores antes de continuar.","error")})),o.addEventListener("click",(()=>{closeModal(e)}))}