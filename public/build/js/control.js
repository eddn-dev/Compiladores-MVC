const AFNS=[];function handleModal(e){switch(e.getAttribute("id")){case"modal2":handleObtenerAFD(e);break;case"modal3":handleProbarAFD(e);break;case"modal4":handleCalculadora(e);break;case"modal8":handleCrearAFNBasico(e);break;case"modal9":handleUnirAFN(e);break;case"modal10":handleConcatenarAFN(e);break;case"modal11":handleAplicarCerraduraKleene(e);break;case"modal12":handleAplicarCerraduraPositiva(e);break;case"modal13":handleAplicarOpcional(e);break;case"modal14":handleAplicarERaAFN(e)}}function handleAFNModal(e,t){const a=e.querySelector("form"),o=a.querySelector(".modal_button.accept"),n=a.querySelector(".modal_button.cancel"),r={},c={};function l(){let e=!0;return t.fields.forEach((t=>{const a=c[t.name].value,o=r[t.name];if(o&&(o.textContent="",o.classList.remove("error")),t.validate){const n=t.validate(a,c);n&&(e=!1,o&&(o.textContent=n,o.classList.add("error")))}})),e}t.fields.forEach((e=>{c[e.name]=a.querySelector(e.selector),e.alertSelector&&(r[e.name]=a.querySelector(e.alertSelector))})),o.disabled=!0,t.populateAFNSelects&&actualizarSelectsDeAFN(c),a.addEventListener(t.validationEvent||"input",(()=>{const e=l();o.disabled=!e})),a.addEventListener("submit",(o=>{o.preventDefault();l()?(t.onSubmit(c,a),mostrarNotificacion("Operación realizada exitosamente.","success"),closeModal(e)):mostrarNotificacion("Por favor, corrige los errores antes de continuar.","error")})),n.addEventListener("click",(()=>{closeModal(e)}))}function esCaracterValido(e){if(1!==e.length)return!1;const t=e.charCodeAt(0);return t>=32&&t<=254}function closeModal(e){const t=new CustomEvent("closeModal",{detail:{modal:e}});document.dispatchEvent(t)}function actualizarSelectsDeAFN(e=null){if(e){for(const t in e)if("SELECT"===e[t].tagName){const a=e[t];a.innerHTML='<option value="">Sin selección</option>',AFNS.forEach((e=>{const t=document.createElement("option");t.value=e.ID_AFN,t.textContent=e.ID_AFN,a.appendChild(t)}))}}else{document.querySelectorAll('select[name^="automaton-id"]').forEach((e=>{e.innerHTML='<option value="">Sin selección</option>',AFNS.forEach((t=>{const a=document.createElement("option");a.value=t.ID_AFN,a.textContent=t.ID_AFN,e.appendChild(a)}))}))}}function mostrarNotificacion(e,t="success"){const a=document.getElementById("notification-container"),o=document.createElement("div");o.classList.add("notification",t,"scale-in-center");const n=`\n      <h2>${"success"===t?"Éxito":"Error"}</h2>\n      <p>${e}</p>\n    `;o.innerHTML=n,a.appendChild(o),setTimeout((()=>{o.classList.remove("scale-in-center"),o.classList.add("scale-out-center"),o.addEventListener("animationend",(()=>{a.removeChild(o)}))}),2500)}function createCytoscapeInstance(e,t){return cytoscape({container:e,elements:t,style:[{selector:"node",style:{label:"data(label)","text-valign":"center",color:"#fff","background-color":"#666",shape:"ellipse",width:"40px",height:"40px","font-size":"12px"}},{selector:"edge",style:{label:"data(label)","curve-style":"bezier","control-point-step-size":40,"target-arrow-shape":"triangle","arrow-scale":1.2,width:2,"line-color":"#9dbaea","target-arrow-color":"#9dbaea","font-size":"10px","text-background-color":"#fff","text-background-opacity":1,"text-background-padding":"2px","edge-text-rotation":"autorotate"}},{selector:"node.estadoAceptacion",style:{"background-color":"#f39c12",shape:"pentagon"}},{selector:"node.estadoInicial",style:{"background-color":"#27ae60",shape:"star"}}],layout:{name:"breadthfirst",directed:!0,padding:10}})}function updateAFNPreview(e,t){const a=document.querySelector(e);if(!t)return void(a.innerHTML="");createCytoscapeInstance(a,t.convertirACytoscape())}function bindAFNSelectionChange(e,t){const a=document.querySelector(e);a.addEventListener("change",(()=>{const e=a.value,o=AFNS.find((t=>t.ID_AFN===e));updateAFNPreview(t,o)}))}async function cargarAutomataDesdeArchivo(e){try{const t=await fetch(e);if(!t.ok)throw new Error(`Error al cargar el archivo: ${t.statusText}`);const a=await t.text();return parseAFDFile(a)}catch(e){throw console.error("Error al cargar el autómata:",e),e}}function parseAFDFile(e){const t=e.split("\n").filter((e=>""!==e.trim())),a=[];for(let e=0;e<t.length;e++){const o=t[e].split(",");if(258!==o.length)throw new Error(`La línea ${e+1} no tiene 258 columnas.`);const n=o.map((e=>parseInt(e.trim())));if(n.some((e=>isNaN(e))))throw new Error(`Valores inválidos en la línea ${e+1}.`);a.push(n)}return a}document.addEventListener("modalLoaded",(function(e){const t=e.detail.modal;handleModal(t),console.log("modal"+t.getAttribute("id"))}));